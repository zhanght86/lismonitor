<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.sinosoft.*"/>

    <!--引入属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties,classpath:mail.properties"/>

    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from">
            <value>${mail.from}</value>
        </property>
        <property name="to">
            <value>${mail.to}</value>
        </property>
        <!-- 查看SimpleMailMessage源码还可以注入标题,内容等 -->
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="host" value="${mail.host}" />
        <property name="username" value="${mail.username}" />
        <property name="password" value="${mail.password}" />
        <property name="javaMailProperties">
            <props>
                <!-- 设置认证开关 -->
                <prop key="mail.smtp.auth">true</prop>
                <!-- 启动调试开关 -->
                <prop key="mail.debug">true</prop>
                <!-- 设置发送延时 -->
                <prop key="mail.smtp.timeout">0</prop>
                <prop key="mail.smtp.transport.protocol">smtp</prop>
                <prop key="mail.smtp.transport.protocol">smtp</prop>
            </props>
        </property>
    </bean>

    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" />
    <!--<bean id="springUtils" class="com.sinosoft.util.SpringUtils" />-->
    <!--本地数据源配置-->
    <bean name="dataSource_LOCAL" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="5" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50" />
        <!-- 连接池最大空闲 该参数已废弃 -->
        <!-- property name="maxIdle" value="20" / -->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="1" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <!-- <property name="poolPreparedStatements" value="true" /> <property
         name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat,wall" />
    </bean>

    <!--&lt;!&ndash;核心数据源配置&ndash;&gt;-->
    <bean name="dataSource_LIS" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${lis_driver}" />
        <property name="url" value="${lis_url}" />
        <property name="username" value="${lis_user}" />
        <property name="password" value="${lis_password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="5" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50" />
        <!-- 连接池最大空闲 该参数已废弃 -->
        <!-- property name="maxIdle" value="20" / -->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="1" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <!-- <property name="poolPreparedStatements" value="true" /> <property
         name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
        <property name="validationQuery" value="${lis_validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat,wall" />
    </bean>

    <!--<bean id="weblogic_LOCAL" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--&lt;!&ndash;启动环境为weblogic下 &ndash;&gt;-->
        <!--<property name="jndiName">-->
            <!--<value>MySQL_LOCAL</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="weblogic_LIS" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--&lt;!&ndash;启动环境为weblogic下 &ndash;&gt;-->
        <!--<property name="jndiName">-->
            <!--<value>ORACL_LIS</value>-->
        <!--</property>-->
        <!--&lt;!&ndash;启动环境为tomcat下 &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="jndiName">&ndash;&gt;-->
            <!--&lt;!&ndash;<value>java:comp/env/jdbc/cdcrip</value>            &ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
        <!---->
        <!--&lt;!&ndash;<property name="jndiEnvironment">&ndash;&gt;-->
            <!--&lt;!&ndash;<props>&ndash;&gt;-->
                <!--&lt;!&ndash;&lt;!&ndash; The value of Context.PROVIDER_URL &ndash;&gt;&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="java.naming.provider.url">t3://http://localhost:7001</prop>&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory</prop>&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="java.naming.security.principal">weblogic</prop>&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="java.naming.security.credentials">weblogic</prop>&ndash;&gt;-->
            <!--&lt;!&ndash;</props>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
    <!--</bean>-->


    <bean id="dataSource" class="com.sinosoft.datasource.ThreadLocalRountingDataSource">
        <!--<property name="defaultTargetDataSource" ref="weblogic_LOCAL" />-->
        <property name="defaultTargetDataSource" ref="dataSource_LOCAL" />
        <property name="targetDataSources">
            <map key-type="com.sinosoft.datasource.DataSources">
                <!--<entry key="LOCAL" value-ref="weblogic_LOCAL" />-->
                <!--<entry key="LIS" value-ref="weblogic_LIS" />-->
                <entry key="LOCAL" value-ref="dataSource_LOCAL" />
                <entry key="LIS" value-ref="dataSource_LIS" />
            </map>
        </property>
    </bean>

    <!--mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:MyBatisConfiguration.xml" />
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sinosoft.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />


    <!---->
    <!--<tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->


</beans>